{"version":3,"sources":["components/Form/index.js","components/Nav/index.js","components/Grid/index.js","components/Footer/index.js","utils/API.js","components/pages/SearchBook.js","components/Jumbotron/index.js","App.js","serviceWorker.js","index.js"],"names":["Input","props","react_default","a","createElement","className","Object","assign","FormBtn","children","Nav","href","Container","_ref","fluid","concat","Col","_ref3","size","split","map","join","Footer","class","API","getBooks","axios","get","getBook","id","deleteBook","delete","saveBook","bookData","post","SearchBook","state","books","input","title","author","topic","loadBooks","then","res","_this","setState","data","synopsis","catch","err","console","log","handleChange","event","preventDefault","target","name","value","handleSubmit","searchBook","book","fetch","json","items","this","endpoint","payload","dataset","description","method","body","JSON","stringify","headers","Content-Type","Accept","response","message","_this2","displaybooks","eachitem","index","key","volumeInfo","authors","onClick","data-title","data-author","data-description","onSubmit","onChange","placeholder","components_Footer","Component","Jumbotron","style","height","clear","paddingTop","textAlign","App","components_Nav","components_Jumbotron","pages_SearchBook","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yOAGO,SAASA,EAAMC,GACpB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,QAAAE,OAAAC,OAAA,CAAOF,UAAU,gBAAmBJ,KAMnC,SAASO,EAAQP,GACtB,OACEC,EAAAC,EAAAC,cAAA,SAAAE,OAAAC,OAAA,GAAYN,EAAZ,CAAmBI,UAAU,oBAC1BJ,EAAMQ,UCbN,SAASC,IACd,OACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kDACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeM,KAAK,KAAjC,gBAOSD,QCPR,SAASE,EAATC,GAAwC,IAAnBC,EAAmBD,EAAnBC,MAAOL,EAAYI,EAAZJ,SACjC,OAAOP,EAAAC,EAAAC,cAAA,OAAKC,UAAS,YAAAU,OAAcD,EAAQ,SAAW,KAAOL,GAUxD,SAASO,EAATC,GAAiC,IAAlBC,EAAkBD,EAAlBC,KAAMT,EAAYQ,EAAZR,SAC1B,OACEP,EAAAC,EAAAC,cAAA,OACEC,UAAWa,EACRC,MAAM,KACNC,IAAI,SAAAF,GAAI,MAAI,OAASA,IACrBG,KAAK,MAEPZ,GCTQa,MAbR,WACL,OACEpB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,+BAEVrB,EAAAC,EAAAC,cAAA,OAAKmB,MAAM,qCAAX,IAAgDrB,EAAAC,EAAAC,cAAA,wCAC9CF,EAAAC,EAAAC,cAAA,KAAGO,KAAK,gDAAR,IAAwDT,EAAAC,EAAAC,cAAA,wECLnDoB,EAAA,CAEbC,SAAU,WACR,OAAOC,IAAMC,IAAI,eAGnBC,QAAS,SAASC,GAChB,OAAOH,IAAMC,IAAI,cAAgBE,IAGnCC,WAAY,SAASD,GACnB,OAAOH,IAAMK,OAAO,cAAgBF,IAGtCG,SAAU,SAASC,GACjB,OAAOP,IAAMQ,KAAK,aAAcD,KC0JrBE,6MAnJbC,MAAQ,CACNC,MAAO,GAEPC,MAAM,CACJC,MAAM,GACNC,OAAO,GACPC,MAAM,OASVC,UAAY,WACVlB,EAAIC,WACDkB,KAAK,SAAAC,GAAG,OACPC,EAAKC,SAAS,CAAET,MAAOO,EAAIG,KAAMR,MAAO,GAAIC,OAAQ,GAAIQ,SAAU,OAEnEC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAsC9BG,aAAe,SAACC,GACdA,EAAMC,iBAEN,IAAIjB,EAAOO,EAAKT,MAAME,MAGK,UAAtBgB,EAAME,OAAOC,MAChBnB,EAAMC,MAAQe,EAAME,OAAOE,MAC3Bb,EAAKC,SAAS,CAACR,MAAMA,KAGU,WAAtBgB,EAAME,OAAOC,MACtBnB,EAAME,OAASc,EAAME,OAAOE,MAC5Bb,EAAKC,SAAS,CAACR,MAAMA,KAGS,UAAtBgB,EAAME,OAAOC,OACrBnB,EAAMG,MAAQa,EAAME,OAAOE,MAC3Bb,EAAKC,SAAS,CAACR,MAAMA,QAMzBqB,aAAc,SAACL,GACbA,EAAMC,iBACNJ,QAAQC,IAAIP,EAAKT,MAAME,OACvBO,EAAKe,WAAWf,EAAKT,MAAME,MAAMC,UAInCqB,WAAa,SAACC,GAEZC,MAAM,iDAAmDD,GAAMlB,KAAK,SAAAI,GAClE,OAAOA,EAAKgB,SACXpB,KAAK,SAAAI,GACNI,QAAQC,IAAIL,GACZF,EAAKC,SAAS,CAACT,MAAMU,EAAKiB,8FApF5BC,KAAKL,WAAW,4CAgBTN,GACP,IArCgBY,EAqCZC,EAAU,CACV5B,MAAOe,EAAME,OAAOY,QAAQ7B,MAC5BC,OAAQc,EAAME,OAAOY,QAAQ5B,OAC7B6B,YAAaf,EAAME,OAAOY,QAAQC,aAGtClB,QAAQC,IAAIe,GAIdL,OA/CkBI,EA+CA,SA3CVA,GA2CqB,CAC3BI,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACLC,eAAgB,mBAChBC,OAAU,sBAGfjC,KAAK,SAAAkC,GACJ,OAAOA,EAASd,SAEjBpB,KAAK,SAAAI,GACJI,QAAQC,IAAIL,KAEbE,MAAM,SAAA6B,GACL3B,QAAQC,IAAI0B,sCAiDL,IAAAC,EAAAd,KAIHe,EAAef,KAAK7B,MAAMC,MAAMjB,IAAK,SAAC6D,EAAUC,GAAX,OACzChF,EAAAC,EAAAC,cAAA,OAAK+E,IAAKD,GACRhF,EAAAC,EAAAC,cAAA,qBAAa6E,EAASG,WAAW7C,OACjCrC,EAAAC,EAAAC,cAAA,qBAAa6E,EAASG,WAAWC,QAAQ,GAAzC,KACAnF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBiF,QAASP,EAAK/C,SAAUuD,aAAYN,EAASG,WAAW7C,MAAOiD,cAAaP,EAASG,WAAWC,QAAQ,GAAII,mBAAkBR,EAASG,WAAWf,aAAtL,aAIF,OAEEnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEVH,EAAAC,EAAAC,cAACM,EAAD,UAEAR,EAAAC,EAAAC,cAAA,QAAMsF,SAAUzB,KAAKN,cAClBzD,EAAAC,EAAAC,cAACJ,EAAD,CAAO2F,SAAY1B,KAAKZ,aAAcI,KAAK,QAAQmC,YAAY,aAC/D1F,EAAAC,EAAAC,cAACJ,EAAD,CAAO2F,SAAY1B,KAAKZ,aAAcI,KAAK,SAASmC,YAAY,eAChE1F,EAAAC,EAAAC,cAACJ,EAAD,CAAO2F,SAAY1B,KAAKZ,aAAcI,KAAK,QAAQmC,YAAY,cAC/D1F,EAAAC,EAAAC,cAACI,EAAD,gBAKRN,EAAAC,EAAAC,cAAA,4BAGAF,EAAAC,EAAAC,cAACY,EAAD,CAAKE,KAAK,cACNhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,IAAgC2E,EAAhC,MAGE9E,EAAAC,EAAAC,cAACyF,EAAD,kBA1IaC,aCTVC,MAXf,SAAAlF,GAAiC,IAAZJ,EAAYI,EAAZJ,SACnB,OACEP,EAAAC,EAAAC,cAAA,OACE4F,MAAO,CAAEC,OAAQ,GAAIC,MAAO,OAAQC,WAAY,GAAIC,UAAW,UAC/D/F,UAAU,aAETI,ICmCQ4F,mLA3Bb,OAEEnG,EAAAC,EAAAC,cAACQ,EAAD,KAEEV,EAAAC,EAAAC,cAAA,WACKF,EAAAC,EAAAC,cAACkG,EAAD,UAECpG,EAAAC,EAAAC,cAACmG,EAAD,MACIrG,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,wCACJF,EAAAC,EAAAC,cAACmG,EAAD,MAEArG,EAAAC,EAAAC,cAACoG,EAAD,eAhBMV,aCAEW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7G,EAAAC,EAAAC,cAAC4G,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1E,KAAK,SAAA2E,GACjCA,EAAaC","file":"static/js/main.c4070a18.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nexport function Input(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input className=\"form-control\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport function FormBtn(props) {\r\n  return (\r\n    <button {...props} className=\"btn btn-success\">\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function Nav() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        Book Search\r\n      </a>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function Footer() {\r\n  return (\r\n    <footer class=\"page-footer font-small blue\">\r\n\r\n        <div class=\"footer-copyright text-center py-3\"> <strong> Â© 2018 Copyright: </strong>\r\n          <a href=\"https://mdbootstrap.com/education/bootstrap/\"> <strong> Gabriela Elizabeth Menocal Cover </strong></a>\r\n        </div>\r\n\r\n    </footer>\r\n\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all books\r\n  getBooks: function() {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  // Gets the book with the given id\r\n  getBook: function(id) {\r\n    return axios.get(\"/api/books/\" + id);\r\n  },\r\n  // Deletes the book with the given id\r\n  deleteBook: function(id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  },\r\n  // Saves a book to the database\r\n  saveBook: function(bookData) {\r\n    return axios.post(\"/api/books\", bookData);\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\n// import 'App.css';\r\nimport { Input, FormBtn } from \"../Form\";\r\nimport { Nav} from \"../Nav\";\r\nimport {Container, Row, Col} from \"../Grid\";\r\nimport Footer from \"../Footer\";\r\nimport API from \"../../utils/API\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n// GET https://www.googleapis.com/books/v1/volumes?q=quilting\r\n\r\nconst prepareCall= (endpoint)=>{\r\n  if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n    return 'http://localhost:4000'+endpoint\r\n}\r\n   return endpoint\r\n}\r\n\r\nclass SearchBook extends Component {\r\n\r\n  state = {\r\n    books: [],\r\n\r\n    input:{\r\n      title:\"\",\r\n      author:\"\",\r\n      topic:\"\"\r\n    }\r\n  }\r\n  \r\n  componentDidMount(){\r\n    this.searchBook(\"quantum\");\r\n    \r\n  }\r\n\r\n  loadBooks = () => {\r\n    API.getBooks()\r\n      .then(res =>\r\n        this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" })\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  saveBook(event){\r\n    var payload = {\r\n        title: event.target.dataset.title,\r\n        author: event.target.dataset.author,\r\n        description: event.target.dataset.description\r\n    };   \r\n    \r\n    console.log(payload);  \r\n\r\n\r\n\r\n  fetch(prepareCall('/books'), {\r\n    method: 'POST',\r\n    body: JSON.stringify(payload),\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n    }\r\n  })\r\n  .then(response => {\r\n    return response.json()\r\n  })\r\n  .then(data => {\r\n    console.log(data);\r\n  })\r\n  .catch(message => {\r\n    console.log(message);\r\n  })\r\n\r\n  }\r\n\r\n  handleChange = (event)=> {\r\n    event.preventDefault();\r\n    // console.log(event.target.name);\r\n    let input =this.state.input;\r\n    // console.log(input);\r\n\r\n    if ( event.target.name === \"title\"){\r\n      input.title = event.target.value;\r\n      this.setState({input:input});\r\n      // console.log(this.state);      \r\n    }\r\n     else if ( event.target.name === \"author\"){\r\n      input.author = event.target.value;\r\n      this.setState({input:input});\r\n      // console.log(this.state);      \r\n    }\r\n    else if ( event.target.name === \"topic\"){\r\n      input.topic = event.target.value;\r\n      this.setState({input:input});\r\n      // console.log(this.state);      \r\n    }    \r\n\r\n  }\r\n\r\n  handleSubmit= (event)=> {\r\n    event.preventDefault();\r\n    console.log(this.state.input);\r\n    this.searchBook(this.state.input.title);\r\n\r\n  }\r\n\r\n  searchBook = (book) => {\r\n    \r\n    fetch(\"https://www.googleapis.com/books/v1/volumes?q=\" + book).then(data => {\r\n      return data.json()\r\n    }).then(data => {\r\n      console.log(data)\r\n      this.setState({books:data.items})\r\n    } )\r\n    \r\n\r\n  }\r\n  \r\n\r\n  render() {\r\n\r\n    // var searchbook = \r\n\r\n    var displaybooks = this.state.books.map ((eachitem, index) => \r\n    <div key={index}> \r\n      <h3> Title: {eachitem.volumeInfo.title}</h3>\r\n      <p> Author: {eachitem.volumeInfo.authors[0]} </p> \r\n      <button className=\"btn btn-primary\" onClick={this.saveBook} data-title={eachitem.volumeInfo.title} data-author={eachitem.volumeInfo.authors[0]} data-description={eachitem.volumeInfo.description}> Save </button>\r\n    </div>\r\n    ) \r\n\r\n    return (\r\n\r\n      <div className=\"App\">\r\n\r\n           <Nav> </Nav>\r\n\r\n           <form onSubmit={this.handleSubmit}>\r\n              <Input onChange = {this.handleChange} name=\"title\" placeholder=\"Title...\" />\r\n              <Input onChange = {this.handleChange} name=\"author\" placeholder=\"Author... \" />\r\n              <Input onChange = {this.handleChange} name=\"topic\" placeholder=\"Topic... \" />\r\n              <FormBtn >Search</FormBtn>\r\n            </form>\r\n\r\n\r\n      \r\n      <h1> Books Search </h1>\r\n\r\n      {/* <Row> test </Row> */}\r\n      <Col size=\"md-6 sm-12\">       \r\n          <div className=\"displaybooks\"> {displaybooks} </div>     \r\n       </Col>\r\n\r\n            <Footer> </Footer>\r\n\r\n\r\n      </div>\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBook;\r\n","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{ height: 50, clear: \"both\", paddingTop: 20, textAlign: \"center\" }}\r\n      className=\"jumbotron\"\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React, { Component } from 'react';\nimport SearchBook  from \"../src/components/pages/SearchBook\";\nimport SaveBook  from \"../src/components/pages/SearchBook\";\nimport Nav from \"../src/components/Nav\";\nimport Footer from \"../src/components/Footer\";\n\nimport {Container, Row, Col} from \"../src/components/Grid\";\n\nimport Jumbotron  from \"../src/components/Jumbotron\";\n\n\n\nclass App extends Component { \n\nrender () { \n\n  return ( \n\n    <Container> \n\n      <div>\n           <Nav> </Nav>\n    \n            <Jumbotron />\n                <h1> Welcome to BookSearch@ </h1>  \n                <h2> React Google Books Search</h2>      \n            <Jumbotron />\n\n            <SearchBook />\n            {/* <SaveBook /> */}\n\n      </div>    \n\n\n    </Container>\n\n\n  \n\n  )\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}